"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"CI Quality Gate","Code Quality","Pull Request to 'main'","Unit test pass rate >= 99%; Code coverage >= 80% (REQ-1-064); SAST/SCA scans find 0 critical/high vulnerabilities (REQ-1-078).","Block pull request merge.","Development Team","Fully Automated","Jest, GitHub Actions, Snyk/CodeQL","Every PR","PR author must fix issues before merge is allowed.","92","1.5","Prevents low-quality code and known vulnerabilities from entering the main branch."
"Staging Deployment Gate","Integration & E2E","Merge to 'main'","Container image scan finds 0 critical vulnerabilities (REQ-1-078); Smoke test suite (critical path E2E tests) passes 100%.","Block deployment to staging; Trigger alert to on-call developer.","DevOps & QA Team","Fully Automated","GitHub Actions, Trivy, Cypress","Every merge to 'main'","On-call dev investigates failure; Rollback if necessary.","95","4","Prevents broken builds or major regressions from reaching the main testing environment."
"Release to Production Gate","Release Readiness","Manual trigger for production deployment","Full regression E2E suite passes 100%; Performance tests show no degradation against baseline; Manual sign-off from QA Lead and Product Owner.","Abort production release.","QA Lead, Product Owner, DevOps Lead","Partially Automated","Cypress, k6, Jira","Per release candidate","Go/No-Go release meeting.","99","24","Final quality checkpoint to prevent defects from impacting users."