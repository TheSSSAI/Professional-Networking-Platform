"task_id","task_name","primary_skill","secondary_skills","complexity_level","estimated_hours","required_experience","productivity_factor","adjusted_hours","team_size","collaboration_required","dependencies","critical_path","skill_learning_curve","ramp_up_hours","resource_notes","alternative_approach","risk_factors","mitigation_strategy","quality_overhead","review_hours","documentation_hours","testing_coordination","integration_overhead"
"IAM-001-T03","BE: Implement `registerUser` GraphQL Mutation and Service","NestJS","GraphQL,bcrypt,TypeORM/Prisma,Security","Medium","8.7","Senior","1.2","11.3","1","","IAM-001-T01,IAM-001-T02","true","Low","","Security-critical task involving password hashing. Requires senior oversight.","Could be assigned to a Mid developer with mandatory pair programming with the Senior.","Incorrect implementation of bcrypt could lead to a major security vulnerability.","Mandatory security code review by a senior engineer; automated SAST scanning in CI.","2.6","1.7","0.9","2","1"
"IAM-002-T04","BE: Integrate Registration with Event Bus and SES","Event-driven architecture","NestJS,AWS SES,TypeScript","High","12","Senior","1.2","15.6","1","true","IAM-001-T03,IAM-002-T02","true","Medium","2","Requires experience with asynchronous systems and AWS integration.","Use a synchronous call to SES, but this would increase API latency and is not recommended.","RISK-008: Dependency on AWS SES deliverability. Failure in the event bus could block user verification.","Implement a Dead Letter Queue (DLQ) for the event listener and monitor it. Configure SPF/DKIM for SES.","3.6","2.4","1.2","3","4"
"IAM-004-T04","BE: Implement Global JWT Guard with Blocklist Check","Security Architecture","NestJS,Passport.js,JWT,Redis","High","10.7","Senior","1.2","13.9","1","","IAM-004-T02","true","Low","","Critical security component that affects all authenticated endpoints. Must be highly performant.","N/A - This is a mandatory security requirement.","RISK-007: Introduces Redis as a synchronous dependency for all authenticated requests. High performance and availability are critical.","Implement a circuit breaker pattern in the guard. Use Multi-AZ Redis for high availability.","3.2","2.1","1.1","2","3"
"IAM-006-T04","BE: Modify login flow to handle multi-step MFA check","Security Architecture","NestJS,JWT","High","10","Senior","1.1","13","1","","IAM-006-T03","true","Medium","1","Requires refactoring the core authentication state machine. High risk of introducing regressions.","N/A - Required for MFA implementation.","RISK-002: Complexity of state management for a multi-step login can introduce vulnerabilities if not handled securely.","Use short-lived, single-purpose tokens for the intermediate step. Mandatory security code review.","3","2","1","3","2"
"IAM-009-T01","BE: Develop the data purge worker/script","Data Engineering","NestJS,PostgreSQL,OpenSearch,AWS S3,GDPR","High","16","Senior","1.2","20.8","1","true","IAM-008-T02","true","High","4","Critically important for GDPR compliance. Requires careful, idempotent scripting to avoid incomplete data deletion.","Soft deletion, but this does not meet the 'right to be forgotten' requirement.","High risk of incomplete or incorrect data deletion, leaving orphaned data or failing to meet compliance.","Develop idempotent scripts. Use `ON DELETE CASCADE` in the database. Perform extensive testing in a production-like environment. Create a dry-run mode for the script.","4.8","3.2","1.6","5","5"