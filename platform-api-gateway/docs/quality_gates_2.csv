"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"PR Quality Gate","Static Analysis & Unit Test","Pull Request to main branch","Linter passes; Unit test coverage > 80% (REQ-1-064); All unit tests pass; SAST scan finds no new critical/high vulnerabilities (REQ-1-078).","Block pull request merge.","Development Team","Fully Automated","GitHub Actions; Jest; ESLint; CodeQL","Every PR","PR author is notified automatically.","92","1.5","Prevents low-quality code and basic security flaws from entering the main branch."
"Staging Deployment Gate","E2E & Performance Test","Post-deployment to Staging Environment","All critical path E2E tests pass; Automated load test results meet performance benchmarks (P95 < 200ms, LCP < 2.5s) (REQ-1-053).","Block promotion to production; create high-priority bug.","QA & DevOps Team","Fully Automated","GitHub Actions; Cypress; k6","Every deployment to Staging","On-call SRE and relevant development team lead are notified.","85","8","Prevents major functional regressions and performance degradation from reaching production."