"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"INFRA-001","[DevOps] Provision Core AWS Infrastructure via Terraform","Establish foundational infrastructure including VPC, subnets, security groups, and IAM roles using Terraform. This is a critical blocker for all other resources.","Task","Sprint Backlog","Critical","devops.eng@company.com","product.owner@company.com","2024-11-08","60","","devops,infrastructure,terraform,aws","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Core Infrastructure & DevOps","EPIC-003","CreativeFlow AI Platform","EPIC-003","","Terraform,AWS,Networking","High","High","VPC and networking are provisioned. EKS cluster and RDS instance are up and running.","Terraform apply successful; resources are visible in AWS console; dev team has access.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","100%","Backend team for database requirements","AWS API availability","Manual verification of resources","State file must be stored securely in S3.","Unblocks all application development."
"INFRA-005","[DevOps] Configure AWS SES Domain & DNS","Configure and verify the sending domain in AWS SES. Set up SPF, DKIM, and DMARC records in DNS to ensure email deliverability and mitigate RISK-003.","Task","Sprint Backlog","Critical","devops.eng@company.com","product.owner@company.com","2024-11-08","10","","devops,aws,ses,email","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Core Infrastructure & DevOps","EPIC-003","CreativeFlow AI Platform","US-002","INFRA-001","AWS SES,DNS","Medium","High","Domain is verified in SES. SPF, DKIM, DMARC records are correctly configured.","Test email sent from SES is successfully delivered without being marked as spam.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","100%","Backend team","DNS provider propagation time","End-to-end email delivery test","Requires access to domain's DNS records.","Enables all transactional email features."
"T-IAM-001","[Backend] Define User & Auth DB Schema","Define and create the initial database schema for the `User` table in PostgreSQL, including columns for email, passwordHash, and status. Implement the TypeORM entity and a migration script.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-08","6","1","backend,database,postgresql,typeorm","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-001","INFRA-001","PostgreSQL,SQL,TypeORM","Low","Low","Migration script successfully creates the `User` table. Email column has a UNIQUE, case-insensitive index. Status column defaults to 'inactive'. `User` entity is defined in the NestJS service.","Code reviewed; Migration successfully applies; schema verified in database.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","DevOps for DB access","RDS instance availability","Integration test","Migration must be run as part of deployment.","Data foundation for user accounts."
"T-IAM-002","[Backend] Implement Registration Service Logic","In the NestJS Identity service, implement the `registerUser` method. This includes logic for checking email uniqueness (case-insensitive), hashing the password with bcrypt, and creating the new user record with 'inactive' status.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-08","8.3","2","backend,nestjs,security,bcrypt","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-001","T-IAM-001","NestJS,TypeScript,bcrypt,TypeORM","Medium","Medium","Method throws a ConflictException for duplicate emails. Method correctly hashes the password using bcrypt with a salt. Method successfully creates a new user record in the database.","Code reviewed; Unit tests passing with >80% coverage; Security review passed for hashing logic.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Unit, Integration testing","","Core logic for user acquisition."
"T-IAM-003","[Backend] Implement Registration GraphQL Mutation","Create the GraphQL mutation endpoint in the `auth.resolver.ts`. Define the DTO for registration input, including `class-validator` decorators for email format and password complexity rules.","Task","Sprint Backlog","High","backend1.dev@company.com","product.owner@company.com","2024-11-08","6","1","backend,nestjs,graphql,api","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-001","T-IAM-002","NestJS,GraphQL,class-validator","Low","Low","GraphQL mutation is accessible and accepts valid input. DTO validation rejects non-compliant passwords and invalid email formats. Successful requests are passed to the auth.service.","Code reviewed; Integration tests passing for both valid and invalid inputs.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Frontend team for API contract","","Integration testing","","Exposes user registration functionality to clients."
"T-IAM-004","[Frontend] Build Registration Form Component","Create a responsive registration form using Next.js and MUI. Implement the form structure with email and password fields, a password visibility toggle, and a disabled-by-default submit button.","Task","Sprint Backlog","High","frontend1.dev@company.com","product.owner@company.com","2024-11-08","8","2","frontend,nextjs,react,mui","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-001","","Next.js,React,MUI,CSS","Medium","Low","Form renders with all required UI elements. Form is responsive across mobile, tablet, and desktop breakpoints. Password input is masked by default and can be toggled. Accessibility audit (Axe) passes with no critical violations.","Code reviewed; Component renders correctly in Storybook; responsive tests pass; accessibility audit passed.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","UX/UI Designer","","Unit, E2E, Accessibility testing","","Provides the user interface for account creation."
"T-IAM-005","[Frontend] Implement Client-Side Validation & API Integration for Registration","Integrate React Hook Form and Zod for real-time client-side validation of the registration form. Implement the Apollo Client mutation call to the backend registration endpoint, including handling of loading and error states.","Task","Sprint Backlog","Critical","frontend1.dev@company.com","product.owner@company.com","2024-11-08","10.2","3","frontend,react,validation,api-integration","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-001","T-IAM-003,T-IAM-004","React,React Hook Form,Zod,Apollo Client","Medium","Low","Email format and password complexity are validated in real-time. Submit button is enabled only when the form is valid. Successful submission redirects to the 'check your email' page. API errors (e.g., duplicate email) are displayed to the user.","Code reviewed; Unit tests passing; E2E test using Cypress passes for both successful and failed registration attempts.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Backend team","","Unit, E2E testing","","Connects the registration UI to the backend, completing the feature."
"T-IAM-006","[Backend] Define UserToken DB Schema","Create the schema and migration for the `UserToken` table. It must store the token, user ID (foreign key), token type (e.g., 'EMAIL_VERIFICATION'), and an expiry timestamp.","Task","Sprint Backlog","Critical","backend2.dev@company.com","product.owner@company.com","2024-11-08","4.2","1","backend,database,postgresql","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-002","T-IAM-001","PostgreSQL,TypeORM","Low","Low","Migration script successfully creates the `UserToken` table. Foreign key to the `User` table is established. An index is created on the token column for fast lookups.","Code reviewed; Migration applies successfully.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Integration test","","Data foundation for secure, single-use tokens."
"T-IAM-007","[Backend] Implement Verification Token Generation Service","Create a `TokenService` in NestJS to handle the generation of secure, unique, time-limited tokens. The service will persist the token and its metadata to the `UserToken` table.","Task","Sprint Backlog","Critical","backend2.dev@company.com","product.owner@company.com","2024-11-08","8.3","2","backend,nestjs,security","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-002","T-IAM-006,T-IAM-002","NestJS,TypeScript,Cryptography","Medium","High","A cryptographically secure random string is generated. A record is created in the `UserToken` table with the correct user ID, token, type, and a 24-hour expiry. The service is integrated into the registration flow.","Code reviewed; Unit tests pass; Security review of token generation passed.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Unit testing","","Core logic for generating secure verification links."
"T-IAM-008","[Backend] Implement Event-Driven Email Dispatch","Modify the registration service to publish a `UserRegistered` event. Create a new Notifications service/module with a listener for this event that calls the email sending logic.","Task","Sprint Backlog","High","backend2.dev@company.com","product.owner@company.com","2024-11-08","6.2","2","backend,nestjs,events","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-002","T-IAM-007","NestJS,Event-Driven Architecture","Medium","Low","Registration service publishes an event with user ID and email. Notifications service listener is invoked upon event publication. The process is asynchronous and does not block the registration API response.","Code reviewed; Integration test confirms listener is triggered.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Integration testing","","Decouples registration from email sending for improved resilience."
"T-IAM-009","[Backend] Integrate AWS SES SDK for Email Sending","In the Notifications service, implement an `EmailService` that uses the AWS SDK for SES to send templated emails. Handle credentials securely via configuration. Implement retry logic.","Task","Sprint Backlog","Critical","backend2.dev@company.com","product.owner@company.com","2024-11-08","10.8","3","backend,aws,ses,email","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-002","INFRA-005,T-IAM-008","NestJS,AWS SDK,AWS SES","High","High","Service can successfully send an email via AWS SES. SES API failures are caught, logged, and retried. Email templates are used for the body.","Code reviewed; Integration tests with a mocked SES client pass; E2E test with Mailtrap confirms email delivery.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","DevOps","AWS SES API","Integration, E2E testing","Requires secure handling of AWS credentials.","Enables sending of all transactional emails."
"T-IAM-010","[Backend] Implement Account Verification Service Logic","In `TokenService`, create a method to validate an email verification token. The logic must check if the token exists, is not expired, and has not been used. If valid, update the associated user's status to 'active' and invalidate the token.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-08","8.3","2","backend,nestjs,security","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-003","T-IAM-007","NestJS,TypeORM,PostgreSQL","Medium","Medium","Method returns user ID for a valid token. Method throws specific exceptions for expired, invalid, or used tokens. The user's status is updated to 'active' in an atomic transaction. The token is invalidated.","Code reviewed; Unit and integration tests for all verification scenarios pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Unit, Integration testing","","Core logic for activating user accounts."
"T-IAM-011","[Backend] Implement Account Verification Endpoint","Create a GraphQL query or REST GET endpoint that accepts the verification token and calls the `TokenService` to perform validation and account activation.","Task","Sprint Backlog","High","backend1.dev@company.com","product.owner@company.com","2024-11-08","4.2","1","backend,nestjs,graphql,api","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-003","T-IAM-010","NestJS,GraphQL","Low","Low","Endpoint correctly extracts token from request. Endpoint returns a success response for a valid token. Endpoint returns appropriate error responses for invalid, expired, or used tokens.","Code reviewed; Integration tests pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Frontend team","","Integration testing","","Exposes the account verification functionality."
"T-IAM-012","[Frontend] Implement Verification Result Pages","Create a dynamic Next.js page at `/auth/verify/[token]`. This page's server-side logic will call the backend verification endpoint. Based on the response, it will render one of three states: success, expired link, or invalid link page.","Task","Sprint Backlog","High","frontend1.dev@company.com","product.owner@company.com","2024-11-08","10.5","3","frontend,nextjs,react","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-003","T-IAM-011","Next.js,React,TypeScript","Medium","Low","A valid token renders the success page. An expired token renders the 'expired' page with a functional 'resend' button. An invalid token renders the 'invalid' page. An already-used token renders an 'already verified' informational page.","Code reviewed; E2E tests pass for all verification scenarios.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Backend team","","E2E testing","","Provides necessary feedback to the user during account verification."
"T-IAM-013","[Backend] Implement Login Service Logic","In the `AuthService`, implement the login method. It must find the user by email, verify their status is 'active', and compare the provided password with the stored hash using `bcrypt.compare`.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-08","6.3","2","backend,nestjs,security,bcrypt","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-006","T-IAM-002","NestJS,bcrypt,TypeORM","Medium","Medium","Method returns user entity on successful authentication. Method throws UnauthorizedException for incorrect credentials. Method throws a specific exception for 'inactive' users. Password comparison is done using a constant-time algorithm.","Code reviewed; Unit tests pass; Security review confirms mitigation of timing attacks.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Unit testing","","Core logic for authenticating users."
"T-IAM-014","[Backend] Implement JWT Generation and Login Mutation","Create the GraphQL login mutation. Upon successful authentication, generate a signed JWT access token (15m expiry) and a refresh token (7d expiry). Return both tokens to the client.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-08","10.3","3","backend,nestjs,graphql,jwt,security","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-006","T-IAM-013","NestJS,GraphQL,JWT","High","High","Successful login returns a valid access and refresh token. Tokens contain correct claims (sub, jti, exp). The JWT secret is securely managed via configuration.","Code reviewed; Integration test confirms tokens are returned on valid login; Security review of JWT implementation passed.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Frontend team","","Integration testing","","Enables session management for authenticated users."
"T-IAM-015","[Frontend] Build Login Form UI","Create a responsive login form page at `/login` using Next.js and MUI components. Include fields for email and password, a 'Forgot Password?' link, and a submit button.","Task","Sprint Backlog","High","frontend2.dev@company.com","product.owner@company.com","2024-11-08","8","2","frontend,nextjs,react,mui","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-006","","Next.js,React,MUI","Low","Low","Form renders correctly on all device sizes. All interactive elements are accessible. Client-side validation for email format is present.","Code reviewed; UI components are reviewed and pass accessibility checks.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Unit testing","","Provides the UI for user login."
"T-IAM-016","[Frontend] Implement Token-Based Auth Flow","Integrate the login form with the backend. On successful login, securely store tokens. Implement an Apollo Client auth link to attach the access token to requests. Implement private routing to protect authenticated pages.","Task","Sprint Backlog","Critical","frontend2.dev@company.com","product.owner@company.com","2024-11-08","14.3","5","frontend,react,security,jwt,apollo","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-006","T-IAM-014,T-IAM-015","Next.js,React,Apollo Client,Security Best Practices","High","High","User can log in and is redirected to a protected page. Subsequent API calls to protected endpoints include the 'Authorization' header. User is redirected to login if they try to access a protected page while unauthenticated.","Code reviewed; E2E test passes; Security review of client-side token handling is complete.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Backend team","","E2E testing","","Enables authenticated user sessions on the client side."
"T-IAM-017","[Backend] Implement Refresh Token Service & Mutation","Create the service logic to validate a refresh token and issue a new access token. Expose this via a GraphQL mutation.","Task","Sprint Backlog","High","backend2.dev@company.com","product.owner@company.com","2024-11-08","10","3","backend,nestjs,graphql,jwt","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-006","T-IAM-014","NestJS,GraphQL,JWT","Medium","Medium","A valid refresh token returns a new access token. An invalid or expired refresh token is rejected with a 401 error.","Code reviewed; Integration tests pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Frontend team","","Integration testing","","Allows for long-lived user sessions without compromising security."
"T-IAM-018","[Backend] Setup Redis Integration for Blocklist","Integrate the `nestjs-redis` module into the Identity service. Configure the connection to the ElastiCache Redis instance. Create a `BlocklistService` to handle adding and checking tokens.","Task","Sprint Backlog","Critical","backend2.dev@company.com","product.owner@company.com","2024-11-08","8.3","3","backend,nestjs,redis,security","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-007","INFRA-001","NestJS,Redis","Medium","Medium","Service can successfully connect to Redis. A token JTI can be added to a Redis set with a specific TTL. The service can check for the existence of a JTI in the set.","Code reviewed; Integration tests for Redis connectivity pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","DevOps","ElastiCache Redis instance","Integration testing","","Infrastructure for immediate session invalidation."
"T-IAM-019","[Backend] Implement Logout Mutation & Blocklist Logic","Create the GraphQL logout mutation. The resolver will call the `BlocklistService` to add the JTI of the user's current access and refresh tokens to the Redis blocklist. The TTL must match the token's remaining validity.","Task","Sprint Backlog","High","backend2.dev@company.com","product.owner@company.com","2024-11-08","6","2","backend,nestjs,graphql,redis","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-007","T-IAM-018","NestJS,GraphQL,Redis","Low","Low","Logout mutation successfully adds token JTI to Redis. The correct TTL is set on the Redis key.","Code reviewed; Integration test verifies JTI is in Redis after logout.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Integration testing","","Core logic for secure user logout."
"T-IAM-020","[Backend] Update JWT Strategy to Check Blocklist","Modify the Passport JWT strategy (`jwt.strategy.ts`) to check the Redis blocklist for the token's JTI on every authenticated request. If the JTI is found, the request must be rejected with a 401 Unauthorized error.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-08","6.3","3","backend,nestjs,security,jwt,redis","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-007","T-IAM-018","NestJS,Passport.js,Redis","Medium","High","A request with a blocklisted token is rejected. A request with a valid, non-blocklisted token is accepted. The performance overhead of the check is minimal.","Code reviewed; Integration test to verify a blocklisted token is rejected passes.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Integration testing","","Enforces session invalidation for enhanced security."
"T-IAM-021","[Frontend] Implement Logout UI and Logic","Add a 'Logout' button to the UI (e.g., in a user profile dropdown). On click, call the logout GraphQL mutation, and in the response handler, clear all client-side tokens and redirect the user to the login page.","Task","Sprint Backlog","High","frontend2.dev@company.com","product.owner@company.com","2024-11-08","4","1","frontend,react,apollo","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-007","T-IAM-019","React,Apollo Client","Low","Low","Clicking 'Logout' logs the user out. Client-side tokens are cleared. User is redirected to the login page.","Code reviewed; E2E test for the logout flow passes.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Backend team","","E2E testing","","Provides the user-facing mechanism for ending a session."
"T-PROF-004","[Frontend] Build Profile Page UI Components","Create the main profile page layout and individual reusable components for displaying Basic Info, Work Experience, Education, and Skills sections using Next.js and MUI.","Task","Sprint Backlog","High","frontend1.dev@company.com","product.owner@company.com","2024-11-08","12.2","3","frontend,nextjs,react,mui","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-021","","Next.js,React,MUI","Medium","Low","Profile page renders with all sections. Components correctly display mock data. UI is responsive and accessible.","Code reviewed; Component library (Storybook) shows all components rendering correctly.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","UX/UI Designer","","Component testing","","Creates the visual foundation for user profiles."
"T-PROF-005","[Frontend] Build 'Add/Edit Work Experience' Modal Form","Create a reusable modal form component for adding and editing work experience. Implement all input fields, date pickers, and client-side validation using React Hook Form and Zod.","Task","Sprint Backlog","High","frontend2.dev@company.com","product.owner@company.com","2024-11-08","12","3","frontend,react,mui,forms","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-022","T-PROF-004","React,MUI,React Hook Form,Zod","Medium","Low","Modal opens for both 'add' and 'edit' modes. All validation rules (required fields, date logic) are enforced on the client side. 'Save' button is disabled if form is invalid.","Code reviewed; Unit tests for the form component pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","","","Unit testing","","UI for adding and managing work history."
"QA-IAM-E2E","[QA] Develop and Execute E2E Tests for IAM Flow","Create and automate end-to-end tests for the entire Identity & Access Management flow, covering registration, email verification, login, logout, and validation of error states.","Task","Sprint Backlog","Critical","qa.eng@company.com","product.owner@company.com","2024-11-08","20","","qa,e2e,cypress,testing","Sprint 1","Establish core infrastructure and implement the complete user authentication lifecycle.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","EPIC-001","T-IAM-005,T-IAM-012,T-IAM-016,T-IAM-021","Cypress,TypeScript,Testing","High","Medium","E2E tests cover all happy paths and key error conditions for the IAM user stories. Tests are integrated into the CI/CD pipeline.","Test scripts are written, passing, and checked into source control.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-10-28","2024-11-08","80%","Frontend and Backend teams","Staging environment availability","E2E testing","","Ensures the quality and security of the core user lifecycle."
"T-IAM-022","[Backend] Implement Password Reset Request Logic","Create a GraphQL mutation that accepts an email. If the email exists, generate a secure, 1-hour password reset token, invalidate previous tokens, and publish an event to send the reset email. Response must be generic to prevent email enumeration.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-22","8.3","2","backend,security,graphql","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-012","T-IAM-007,T-IAM-008","NestJS,GraphQL,TypeORM","Medium","High","A request for a registered email generates a token and triggers an email event. A request for an unregistered email returns the same generic success response but does nothing. Previous reset tokens are invalidated.","Code reviewed; Integration tests pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Integration testing","","Initiates the secure account recovery flow."
"T-IAM-023","[Backend] Implement Password Reset Confirmation Logic","Create a GraphQL mutation to confirm the password reset. It must validate the token, ensure the new password meets complexity rules, hash the new password, update the user record, and invalidate the reset token.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-22","10.3","3","backend,security,graphql,bcrypt","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-012","T-IAM-022","NestJS,GraphQL,bcrypt","Medium","Medium","A valid token allows a password update. An invalid, used, or expired token is rejected. The user's password hash is updated. The reset token is invalidated.","Code reviewed; Integration tests for all confirmation scenarios pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Integration testing","","Finalizes the secure account recovery flow."
"T-IAM-024","[Backend] Invalidate All Sessions on Password Reset","Extend the password reset confirmation logic to invalidate all active sessions for the user. This involves finding all non-expired tokens for the user and adding them to the Redis blocklist.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-22","8.3","3","backend,security,redis,jwt","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-012","T-IAM-018,T-IAM-023","NestJS,Redis","Medium","High","On successful password reset, all user's active JWTs are blocklisted. A previously valid access token is now rejected after a password reset.","Code reviewed; Integration test: log in, reset password, then try to use original access token and confirm failure.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Integration testing","","Prevents account takeover if an old session was compromised."
"T-IAM-025","[Frontend] Build Password Reset Request Page","Create the '/forgot-password' page with an email input form. Integrate with the backend to request the reset link and display the generic confirmation message.","Task","Sprint Backlog","High","frontend1.dev@company.com","product.owner@company.com","2024-11-22","6","1","frontend,nextjs,react,apollo","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-012","T-IAM-022","Next.js,React,Apollo Client","Low","Low","User can enter an email and submit the form. A confirmation message is displayed on success. API errors are handled gracefully.","Code reviewed; E2E test passes.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","E2E testing","","UI for initiating the password reset flow."
"T-IAM-026","[Frontend] Build Reset Password Confirmation Page","Create the dynamic '/reset-password/[token]' page. It should extract the token from the URL, display a form for the new password and confirmation with complexity validation, and call the backend to finalize the reset.","Task","Sprint Backlog","High","frontend1.dev@company.com","product.owner@company.com","2024-11-22","12.2","3","frontend,nextjs,react,forms","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","Identity & Access Management","EPIC-001","CreativeFlow AI Platform","US-012","T-IAM-023","Next.js,React,Apollo Client","Medium","Low","Page correctly parses the token from the URL. Form validates that passwords match and meet complexity rules. Successful reset redirects to the login page with a success message. Handles errors for invalid/expired tokens.","Code reviewed; E2E test for the full reset flow passes.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","E2E testing","","UI for completing the password reset flow."
"T-PROF-001","[Database] Design Profile-Related Schemas","Design and create migration scripts for `UserProfile`, `WorkExperience`, `Education`, and `Skill` tables. Establish foreign key relationships to the `User` table and enforce referential integrity.","Task","Sprint Backlog","Critical","backend2.dev@company.com","product.owner@company.com","2024-11-22","12","3","backend,database,postgresql","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-021","T-IAM-001","PostgreSQL,SQL,TypeORM","High","Medium","Migration scripts successfully create all required tables. One-to-one relationship between `User` and `UserProfile` is established. One-to-many and many-to-many relationships are correct.","Code reviewed; Migrations apply successfully.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Integration testing","","Data foundation for the entire user profile feature set."
"T-PROF-002","[Backend] Implement Profile CRUD Service","In a new `profile-service`, create the service logic for all CRUD operations on a user's profile, including basic info, work experience, and education. Implement authorization to ensure users can only modify their own data.","Task","Sprint Backlog","Critical","backend2.dev@company.com","product.owner@company.com","2024-11-22","16","5","backend,nestjs,crud,security","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-021","T-PROF-001","NestJS,TypeORM","High","High","Service methods correctly perform C/R/U/D operations on profile entities. Authorization logic throws a ForbiddenException if a user tries to modify another user's profile. Validation logic is enforced.","Code reviewed; All tests pass with >80% coverage; Security review passed for authorization logic.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Unit, Integration, Security testing","","Core logic for managing user profile data."
"T-PROF-003","[Backend] Implement Profile GraphQL Resolvers","Expose the profile CRUD functionality via GraphQL queries and mutations in the `profile.resolver.ts`. Use DTOs with validation for all inputs.","Task","Sprint Backlog","High","backend2.dev@company.com","product.owner@company.com","2024-11-22","10.3","3","backend,nestjs,graphql,api","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-021","T-PROF-002","NestJS,GraphQL","Medium","Low","GraphQL endpoints are available for all profile CRUD operations. Endpoints are protected by an authentication guard. Input DTOs correctly validate incoming data.","Code reviewed; Integration tests for the resolvers pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","Frontend team","","Integration testing","","Exposes profile management functionality to clients."
"T-PROF-006","[Frontend] Integrate Experience Form with Backend","Connect the 'Add/Edit Work Experience' form to the corresponding GraphQL mutations. Handle API loading and error states, and update the profile page UI optimistically or on success.","Task","Sprint Backlog","High","frontend2.dev@company.com","product.owner@company.com","2024-11-22","12","3","frontend,react,apollo,api-integration","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-022","T-PROF-003,T-PROF-005","React,Apollo Client","Medium","Low","User can successfully add a new work experience entry. User can successfully edit an existing entry. API errors are caught and displayed to the user. The profile page updates without a full reload.","Code reviewed; E2E tests for adding and editing a work experience pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","E2E testing","","Completes the feature for managing work experience."
"T-CONN-001","[Backend] Design and Implement Connections Schema","Create the `Connection` table in PostgreSQL to store relationships. It should include `user_a_id`, `user_b_id`, `status` (pending, connected, declined), and `action_user_id` to indicate who initiated the request.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-22","6","2","backend,database,postgresql","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-039","T-IAM-001","PostgreSQL,SQL","Medium","Low","Migration script creates the `Connection` table. A unique constraint prevents duplicate entries. The schema supports all required states for a connection lifecycle.","Code reviewed; Migration applies successfully.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Integration testing","","Data foundation for the social graph."
"T-CONN-002","[Backend] Implement Connection Request Service","In a new `connections-service`, implement logic to create a connection request. It must validate that the users aren't already connected and that no request is pending between them.","Task","Sprint Backlog","Critical","backend1.dev@company.com","product.owner@company.com","2024-11-22","10.3","3","backend,nestjs","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-039","T-CONN-001","NestJS,TypeORM","Medium","Low","Service method creates a 'pending' connection record. Method throws an exception if a connection or pending request already exists.","Code reviewed; Unit and integration tests pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Unit, Integration testing","","Core logic for initiating connections."
"T-CONN-003","[Backend] Implement Connection GraphQL Mutations","Expose the connection logic via GraphQL mutations for sending, accepting, declining, and removing connections. Protect all mutations with an authentication guard.","Task","Sprint Backlog","High","backend1.dev@company.com","product.owner@company.com","2024-11-22","10","3","backend,nestjs,graphql,api","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-039","T-CONN-002","NestJS,GraphQL","Medium","Low","GraphQL mutations are available and functional. Unauthorized requests are rejected.","Code reviewed; Integration tests for the resolvers pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","Frontend team","","Integration testing","","Exposes connection management functionality to clients."
"T-CONN-004","[Frontend] Implement Connection Action Buttons & UI","Create a dynamic button component for user profiles that displays 'Connect', 'Pending', or 'Message' based on the connection status. Build the 'My Network' page to display pending requests and the full connection list.","Task","Sprint Backlog","High","frontend1.dev@company.com","product.owner@company.com","2024-11-22","12.2","3","frontend,react,nextjs,apollo","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-039","T-CONN-003","Next.js,React,Apollo Client","Medium","Low","The correct action button is displayed on user profiles. User can send a connection request from the UI. User can view their pending requests and connections list.","Code reviewed; E2E test for sending a connection request passes.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","E2E testing","","UI for managing the entire connection lifecycle."
"T-CONN-005","[Backend] Implement Connection Accept/Decline Logic","In `connections.service.ts`, implement the methods to accept or decline a request. This involves updating the status of the connection record. The methods must verify that the user performing the action is the intended receiver of the request.","Task","Sprint Backlog","High","backend2.dev@company.com","product.owner@company.com","2024-11-22","10.3","3","backend,nestjs","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-042","T-CONN-002","NestJS,TypeORM","Medium","Low","Accepting a 'pending' request changes its status to 'connected'. Declining a 'pending' request changes its status to 'declined'. An attempt to act on a request by an unauthorized user is rejected.","Code reviewed; Integration tests for accept/decline logic pass.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","Integration testing","","Enables the completion of the connection handshake."
"T-CONN-006","[Frontend] Implement Accept/Decline UI Actions","In the 'My Network' page, connect the 'Accept' and 'Decline' buttons to their respective GraphQL mutations. On success, the UI should update in real-time to remove the request from the pending list.","Task","Sprint Backlog","High","frontend2.dev@company.com","product.owner@company.com","2024-11-22","6","2","frontend,react,apollo","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","US-042","T-CONN-004,T-CONN-005","React,Apollo Client","Low","Low","Clicking 'Accept' establishes a connection. Clicking 'Decline' removes the request. The pending request list updates immediately after an action.","Code reviewed; E2E test for accepting a connection request passes.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","","","E2E testing","","Allows users to act on pending connection requests."
"QA-PROF-CONN-E2E","[QA] Develop E2E Tests for Profile & Connections","Create and automate end-to-end tests for the Profile and Connection Management flows. This includes creating/editing profile info, and sending/accepting connection requests.","Task","Sprint Backlog","High","qa.eng@company.com","product.owner@company.com","2024-11-22","30","","qa,e2e,cypress","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","User Profile & Network Management","EPIC-002","CreativeFlow AI Platform","EPIC-002","T-PROF-006,T-CONN-006","Cypress,Testing","High","Medium","E2E tests cover all happy paths and key error conditions for the Profile and Connection user stories. Tests are integrated into the CI/CD pipeline.","Test scripts are written, passing, and checked into source control.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","Frontend and Backend teams","Staging environment availability","E2E testing","","Ensures the quality of core profile and networking features."
"CICD-ENHANCE-01","[DevOps] Enhance CI/CD Pipeline with Automated Testing","Integrate automated E2E tests (Cypress) and performance tests (k6) into the GitHub Actions CI/CD pipeline. Configure the pipeline to run these tests against a dedicated staging environment on every merge to the main branch.","Task","Sprint Backlog","High","devops.eng@company.com","product.owner@company.com","2024-11-22","20","","devops,ci-cd,github-actions,testing","Sprint 2","Enable account recovery and establish foundational profile and networking capabilities.","Core Infrastructure & DevOps","EPIC-003","CreativeFlow AI Platform","EPIC-003","QA-PROF-CONN-E2E","GitHub Actions,Cypress,k6,Docker","High","High","Pipeline automatically triggers and runs E2E tests. A failed test run fails the pipeline build. Performance test results are published as artifacts.","Pipeline configuration is merged and successfully runs against a test branch.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-11","2024-11-22","80%","QA team","","Pipeline validation","","Automates quality gates to improve release reliability and velocity."