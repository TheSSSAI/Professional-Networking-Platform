"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request CI Gate","Code Quality","Code commit to a PR","Unit test coverage >= 95% for security modules; All linting and unit tests pass; No new Critical/High vulnerabilities from SAST/SCA scans.","Block merge to main branch; Notify author in PR.","Development Team","Fully Automated","Jest; Codecov; GitHub Actions; CodeQL; npm audit","Every commit","PR review comment; direct message to author.","92","1.5","Prevents low-quality or insecure code from entering the main codebase."
"Pre-Deployment Staging Gate","Integration & E2E","Manual trigger before deployment to Production","100% of critical path E2E tests pass (Login, Logout, Registration, PW Reset); 98% of all integration tests pass; P95 latency for auth endpoints < 200ms.","Block deployment to Production; Create P1 bug report.","QA Team & DevOps","Fully Automated","Cypress; k6; GitHub Actions","On-demand before release","Go/No-Go meeting with Tech Lead and Product Manager.","98","8","Prevents regressions and performance issues from reaching production users."
"Post-Launch Security Gate","Security","Quarterly Schedule","Third-party penetration test reports zero critical or high-severity findings in authentication or session management flows.","Create critical security epics; Schedule emergency patch release.","Security Team","Manual","Burp Suite Pro; External Pen Test Vendor","Quarterly","Immediate report to CTO and Head of Engineering.","","120","Validates the platform's security posture against real-world attack vectors."