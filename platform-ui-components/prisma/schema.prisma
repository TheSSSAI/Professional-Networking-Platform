// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Minimal representation of a User from the Identity service.
// This service is not the source of truth for User data but needs a reference.
model User {
  id            String         @id @default(uuid())
  conversations Conversation[] @relation("ConversationToUser")
  messages      Message[]
}

model Conversation {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  participants User[]    @relation("ConversationToUser")
  messages     Message[]

  @@map("conversations")
}

model Message {
  id             String       @id @default(uuid())
  content        String       @db.Text
  authorId       String
  conversationId String
  status         String       @default("sent") // e.g., 'sent', 'delivered', 'read'
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  author       User         @relation(fields: [authorId], references: [id], onDelete: Cascade)
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId, createdAt(sort: Desc)])
  @@map("messages")
}

// This is an implicit many-to-many relation table for Conversation participants,
// which will be automatically generated by Prisma.
// model _ConversationToUser {
//   A String
//   B String
//
//   @@unique([A, B])
//   @@index([B])
// }