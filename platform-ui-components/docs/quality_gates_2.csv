"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request CI Gate","Code Quality & Security","Pull request to main branch","Unit test coverage >= 80%. All unit & integration tests pass. No critical/high vulnerabilities found by SAST (CodeQL), SCA (npm audit), or Container (Trivy) scans.","Block pull request merge.","Development Team","Fully Automated","GitHub Actions, Jest, CodeQL, Trivy","Every commit on a PR","PR author is notified; Tech Lead approval required for bypass.","92","4","Prevents defects, vulnerabilities, and untested code from entering the main branch."
"Staging Deployment Gate (CD)","Deployment & Smoke Test","Merge to main branch","CI Gate passed. Docker image successfully built and pushed to ECR. Kubernetes deployment to staging is successful. Automated API smoke test suite passes against the new deployment.","Rollback deployment; create P1 incident; notify on-call engineer.","DevOps Team","Fully Automated","GitHub Actions, AWS ECR, Kubernetes, Jest/Supertest","Every merge to main","PagerDuty alert to DevOps on-call.","98","1.5","Ensures the staging environment is always running a stable, tested build."
"Pre-Release Performance Gate","Performance","Manual trigger before a production release candidate is tagged","P95 latency of critical endpoints (login, refreshToken) is < 200ms. No performance regression > 10% from the last release baseline.","Block production release. Performance tuning task is created and prioritized.","QA Team","Fully Automated","k6, GitHub Actions","Per release candidate","Go/No-Go decision in release planning meeting.","100","24","Prevents deploying code that would degrade user experience or cause scalability issues."