# 1 Overview

## 1.1 Diagram Id

SEQ-IF-002

## 1.2 Name

User Password Reset Flow

## 1.3 Description

A user who has forgotten their password requests a reset link. The system sends a secure, time-limited link to their registered email, allowing them to set a new password.

## 1.4 Type

üîπ IntegrationFlow

## 1.5 Purpose

To provide a secure way for users to regain access to their account, as per SRS-001-F1 (1.1.3).

## 1.6 Complexity

Medium

## 1.7 Priority

üî¥ High

## 1.8 Frequency

OnDemand

## 1.9 Participants

- REPO-APP-CLIENT
- REPO-GW-API
- REPO-SVC-IDENTITY
- REPO-SVC-NOTIFICATIONS

## 1.10 Key Interactions

- User enters their email in the 'Forgot Password' form.
- Identity Service generates a unique, single-use, time-limited reset token and stores its hash.
- Identity Service publishes a 'PasswordResetRequested' event.
- Notifications Service consumes the event and sends the reset link via AWS SES.
- User clicks the link, is taken to a reset page, and submits a new password.
- Identity Service validates the token, updates the user's password hash, and invalidates the reset token.

## 1.11 Triggers

- User requests a password reset.

## 1.12 Outcomes

- User's password is changed securely.
- User can now log in with their new password.

## 1.13 Business Rules

- Password reset links must be time-limited and single-use.

## 1.14 Error Scenarios

- User provides an email that is not registered.
- The reset link has expired or is invalid.

## 1.15 Integration Points

- AWS SES for sending the reset email.

# 2.0 Details

## 2.1 Diagram Id

SEQ-IF-002

## 2.2 Name

User Password Reset Implementation Flow

## 2.3 Description

A comprehensive, implementation-ready sequence diagram detailing the user password reset process. This sequence covers the user-initiated request, asynchronous email delivery via an event-driven mechanism, and the final password update upon token validation. The design emphasizes security best practices, such as single-use, time-limited tokens and preventing email enumeration attacks.

## 2.4 Participants

### 2.4.1 Actor

#### 2.4.1.1 Repository Id

User

#### 2.4.1.2 Display Name

User

#### 2.4.1.3 Type

üîπ Actor

#### 2.4.1.4 Technology

Human

#### 2.4.1.5 Order

1

#### 2.4.1.6 Style

| Property | Value |
|----------|-------|
| Shape | actor |
| Color | #999999 |
| Stereotype |  |

### 2.4.2.0 Client Application

#### 2.4.2.1 Repository Id

REPO-APP-CLIENT

#### 2.4.2.2 Display Name

Web Client (SPA)

#### 2.4.2.3 Type

üîπ Client Application

#### 2.4.2.4 Technology

Next.js, React

#### 2.4.2.5 Order

2

#### 2.4.2.6 Style

| Property | Value |
|----------|-------|
| Shape | rectangle |
| Color | #1E90FF |
| Stereotype | Next.js |

### 2.4.3.0 API Gateway

#### 2.4.3.1 Repository Id

REPO-GW-API

#### 2.4.3.2 Display Name

API Gateway

#### 2.4.3.3 Type

üîπ API Gateway

#### 2.4.3.4 Technology

AWS API Gateway

#### 2.4.3.5 Order

3

#### 2.4.3.6 Style

| Property | Value |
|----------|-------|
| Shape | rectangle |
| Color | #FF8C00 |
| Stereotype | GraphQL |

### 2.4.4.0 Microservice

#### 2.4.4.1 Repository Id

REPO-SVC-IDENTITY

#### 2.4.4.2 Display Name

Identity Service

#### 2.4.4.3 Type

üîπ Microservice

#### 2.4.4.4 Technology

NestJS, TypeScript

#### 2.4.4.5 Order

4

#### 2.4.4.6 Style

| Property | Value |
|----------|-------|
| Shape | rectangle |
| Color | #32CD32 |
| Stereotype | gRPC |

### 2.4.5.0 Messaging System

#### 2.4.5.1 Repository Id

MessageBus

#### 2.4.5.2 Display Name

Message Bus

#### 2.4.5.3 Type

üîπ Messaging System

#### 2.4.5.4 Technology

AWS SNS/SQS

#### 2.4.5.5 Order

5

#### 2.4.5.6 Style

| Property | Value |
|----------|-------|
| Shape | database |
| Color | #FF4500 |
| Stereotype | EIP |

### 2.4.6.0 Microservice

#### 2.4.6.1 Repository Id

REPO-SVC-NOTIFICATIONS

#### 2.4.6.2 Display Name

Notifications Service

#### 2.4.6.3 Type

üîπ Microservice

#### 2.4.6.4 Technology

NestJS, TypeScript

#### 2.4.6.5 Order

6

#### 2.4.6.6 Style

| Property | Value |
|----------|-------|
| Shape | rectangle |
| Color | #9370DB |
| Stereotype | gRPC |

### 2.4.7.0 External System

#### 2.4.7.1 Repository Id

AWS_SES

#### 2.4.7.2 Display Name

AWS SES

#### 2.4.7.3 Type

üîπ External System

#### 2.4.7.4 Technology

AWS SDK

#### 2.4.7.5 Order

7

#### 2.4.7.6 Style

| Property | Value |
|----------|-------|
| Shape | cloud |
| Color | #DAA520 |
| Stereotype | External API |

## 2.5.0.0 Interactions

### 2.5.1.0 User Interaction

#### 2.5.1.1 Source Id

User

#### 2.5.1.2 Target Id

REPO-APP-CLIENT

#### 2.5.1.3 Message

1. Submits 'Forgot Password' form with email

#### 2.5.1.4 Sequence Number

1

#### 2.5.1.5 Type

üîπ User Interaction

#### 2.5.1.6 Is Synchronous

‚úÖ Yes

#### 2.5.1.7 Return Message



#### 2.5.1.8 Has Return

‚ùå No

#### 2.5.1.9 Is Activation

‚úÖ Yes

#### 2.5.1.10 Technical Details

##### 2.5.1.10.1 Protocol

DOM Event

##### 2.5.1.10.2 Method

onSubmit

##### 2.5.1.10.3 Parameters

- {'name': 'email', 'type': 'string', 'description': "User's registered email address."}

##### 2.5.1.10.4 Authentication

N/A

##### 2.5.1.10.5 Error Handling

Client-side validation for email format.

##### 2.5.1.10.6 Performance

N/A

### 2.5.2.0.0 API Call

#### 2.5.2.1.0 Source Id

REPO-APP-CLIENT

#### 2.5.2.2.0 Target Id

REPO-GW-API

#### 2.5.2.3.0 Message

2. Sends GraphQL mutation: `requestPasswordReset`

#### 2.5.2.4.0 Sequence Number

2

#### 2.5.2.5.0 Type

üîπ API Call

#### 2.5.2.6.0 Is Synchronous

‚úÖ Yes

#### 2.5.2.7.0 Return Message

4. Returns generic success response

#### 2.5.2.8.0 Has Return

‚úÖ Yes

#### 2.5.2.9.0 Is Activation

‚úÖ Yes

#### 2.5.2.10.0 Technical Details

##### 2.5.2.10.1 Protocol

HTTPS

##### 2.5.2.10.2 Method

POST /graphql

##### 2.5.2.10.3 Parameters

- {'name': 'mutation', 'type': 'string', 'description': 'GraphQL payload: `mutation { requestPasswordReset(email: "user@example.com") }`'}

##### 2.5.2.10.4 Authentication

N/A

##### 2.5.2.10.5 Error Handling

Handles HTTP 4xx/5xx errors. Displays a generic success message regardless of outcome to prevent email enumeration.

##### 2.5.2.10.6 Performance

p99 < 500ms

### 2.5.3.0.0 RPC Call

#### 2.5.3.1.0 Source Id

REPO-GW-API

#### 2.5.3.2.0 Target Id

REPO-SVC-IDENTITY

#### 2.5.3.3.0 Message

3. Forwards request via gRPC call: `requestPasswordReset`

#### 2.5.3.4.0 Sequence Number

3

#### 2.5.3.5.0 Type

üîπ RPC Call

#### 2.5.3.6.0 Is Synchronous

‚úÖ Yes

#### 2.5.3.7.0 Return Message

3.5. Returns success status

#### 2.5.3.8.0 Has Return

‚úÖ Yes

#### 2.5.3.9.0 Is Activation

‚úÖ Yes

#### 2.5.3.10.0 Technical Details

##### 2.5.3.10.1 Protocol

gRPC

##### 2.5.3.10.2 Method

IdentityService.requestPasswordReset

##### 2.5.3.10.3 Parameters

- {'name': 'email', 'type': 'string', 'description': "User's email from the mutation."}

##### 2.5.3.10.4 Authentication

Internal mTLS

##### 2.5.3.10.5 Error Handling

If user not found, process continues to avoid leaking information. Returns error only on internal failure.

##### 2.5.3.10.6 Performance

p99 < 200ms

#### 2.5.3.11.0 Nested Interactions

##### 2.5.3.11.1 Internal Logic

###### 2.5.3.11.1.1 Source Id

REPO-SVC-IDENTITY

###### 2.5.3.11.1.2 Target Id

REPO-SVC-IDENTITY

###### 2.5.3.11.1.3 Message

3.1. Finds user by email. If not found, exits gracefully.

###### 2.5.3.11.1.4 Sequence Number

3.1

###### 2.5.3.11.1.5 Type

üîπ Internal Logic

###### 2.5.3.11.1.6 Is Synchronous

‚úÖ Yes

###### 2.5.3.11.1.7 Return Message



###### 2.5.3.11.1.8 Has Return

‚ùå No

###### 2.5.3.11.1.9 Technical Details

| Property | Value |
|----------|-------|
| Protocol | Database Query |
| Method | SELECT * FROM User WHERE email = ? |
| Error Handling | Graceful exit on no-result to prevent email enumer... |

##### 2.5.3.11.2.0 Internal Logic

###### 2.5.3.11.2.1 Source Id

REPO-SVC-IDENTITY

###### 2.5.3.11.2.2 Target Id

REPO-SVC-IDENTITY

###### 2.5.3.11.2.3 Message

3.2. Generates secure, time-limited (15 min) reset token.

###### 2.5.3.11.2.4 Sequence Number

3.2

###### 2.5.3.11.2.5 Type

üîπ Internal Logic

###### 2.5.3.11.2.6 Is Synchronous

‚úÖ Yes

###### 2.5.3.11.2.7 Return Message



###### 2.5.3.11.2.8 Has Return

‚ùå No

###### 2.5.3.11.2.9 Technical Details

| Property | Value |
|----------|-------|
| Protocol | Internal Library |
| Method | crypto.randomBytes() |
| Error Handling | N/A |

##### 2.5.3.11.3.0 Internal Logic

###### 2.5.3.11.3.1 Source Id

REPO-SVC-IDENTITY

###### 2.5.3.11.3.2 Target Id

REPO-SVC-IDENTITY

###### 2.5.3.11.3.3 Message

3.3. Hashes token (SHA-256) and stores hash with expiry.

###### 2.5.3.11.3.4 Sequence Number

3.3

###### 2.5.3.11.3.5 Type

üîπ Internal Logic

###### 2.5.3.11.3.6 Is Synchronous

‚úÖ Yes

###### 2.5.3.11.3.7 Return Message



###### 2.5.3.11.3.8 Has Return

‚ùå No

###### 2.5.3.11.3.9 Technical Details

| Property | Value |
|----------|-------|
| Protocol | Database Query |
| Method | INSERT INTO PasswordResetTokens (userId, tokenHash... |
| Error Handling | Logs internal DB error. |

##### 2.5.3.11.4.0 Message Publish

###### 2.5.3.11.4.1 Source Id

REPO-SVC-IDENTITY

###### 2.5.3.11.4.2 Target Id

MessageBus

###### 2.5.3.11.4.3 Message

3.4. Publishes `PasswordResetRequested` event

###### 2.5.3.11.4.4 Sequence Number

3.4

###### 2.5.3.11.4.5 Type

üîπ Message Publish

###### 2.5.3.11.4.6 Is Synchronous

‚ùå No

###### 2.5.3.11.4.7 Return Message



###### 2.5.3.11.4.8 Has Return

‚ùå No

###### 2.5.3.11.4.9 Technical Details

####### 2.5.3.11.4.9.1 Protocol

AWS SDK (SNS)

####### 2.5.3.11.4.9.2 Method

sns.publish()

####### 2.5.3.11.4.9.3 Parameters

- {'name': 'payload', 'type': 'JSON', 'description': '{ userId, email, rawResetToken }'}

####### 2.5.3.11.4.9.4 Error Handling

Retry on publish failure. Log critical error if retries fail.

### 2.5.4.0.0.0.0 UI Update

#### 2.5.4.1.0.0.0 Source Id

REPO-APP-CLIENT

#### 2.5.4.2.0.0.0 Target Id

User

#### 2.5.4.3.0.0.0 Message

5. Displays generic confirmation: 'If an account exists...'

#### 2.5.4.4.0.0.0 Sequence Number

5

#### 2.5.4.5.0.0.0 Type

üîπ UI Update

#### 2.5.4.6.0.0.0 Is Synchronous

‚úÖ Yes

#### 2.5.4.7.0.0.0 Return Message



#### 2.5.4.8.0.0.0 Has Return

‚ùå No

#### 2.5.4.9.0.0.0 Is Activation

‚ùå No

### 2.5.5.0.0.0.0 Message Consume

#### 2.5.5.1.0.0.0 Source Id

MessageBus

#### 2.5.5.2.0.0.0 Target Id

REPO-SVC-NOTIFICATIONS

#### 2.5.5.3.0.0.0 Message

6. Consumes `PasswordResetRequested` event

#### 2.5.5.4.0.0.0 Sequence Number

6

#### 2.5.5.5.0.0.0 Type

üîπ Message Consume

#### 2.5.5.6.0.0.0 Is Synchronous

‚ùå No

#### 2.5.5.7.0.0.0 Return Message



#### 2.5.5.8.0.0.0 Has Return

‚ùå No

#### 2.5.5.9.0.0.0 Is Activation

‚úÖ Yes

#### 2.5.5.10.0.0.0 Technical Details

##### 2.5.5.10.1.0.0 Protocol

AWS SQS

##### 2.5.5.10.2.0.0 Method

SQS Polling

##### 2.5.5.10.3.0.0 Parameters

*No items available*

##### 2.5.5.10.4.0.0 Authentication

IAM Role

##### 2.5.5.10.5.0.0 Error Handling

Message moved to DLQ after exhausting SQS retry policy.

##### 2.5.5.10.6.0.0 Performance

N/A

### 2.5.6.0.0.0.0 External API Call

#### 2.5.6.1.0.0.0 Source Id

REPO-SVC-NOTIFICATIONS

#### 2.5.6.2.0.0.0 Target Id

AWS_SES

#### 2.5.6.3.0.0.0 Message

7. Sends password reset email via API call

#### 2.5.6.4.0.0.0 Sequence Number

7

#### 2.5.6.5.0.0.0 Type

üîπ External API Call

#### 2.5.6.6.0.0.0 Is Synchronous

‚úÖ Yes

#### 2.5.6.7.0.0.0 Return Message

7.1. Returns send status

#### 2.5.6.8.0.0.0 Has Return

‚úÖ Yes

#### 2.5.6.9.0.0.0 Is Activation

‚úÖ Yes

#### 2.5.6.10.0.0.0 Technical Details

##### 2.5.6.10.1.0.0 Protocol

HTTPS (AWS SDK)

##### 2.5.6.10.2.0.0 Method

ses.sendEmail()

##### 2.5.6.10.3.0.0 Parameters

###### 2.5.6.10.3.1.0 ToAddress

####### 2.5.6.10.3.1.1 Name

ToAddress

####### 2.5.6.10.3.1.2 Type

üîπ string

###### 2.5.6.10.3.2.0 Body

####### 2.5.6.10.3.2.1 Name

Body

####### 2.5.6.10.3.2.2 Type

üîπ HTML

####### 2.5.6.10.3.2.3 Description

Contains the URL with the raw reset token.

##### 2.5.6.10.4.0.0 Authentication

IAM Role

##### 2.5.6.10.5.0.0 Error Handling

Retry with exponential backoff on transient errors. Circuit breaker for sustained failures.

##### 2.5.6.10.6.0.0 Performance

p99 < 2s

### 2.5.7.0.0.0.0 User Interaction

#### 2.5.7.1.0.0.0 Source Id

User

#### 2.5.7.2.0.0.0 Target Id

REPO-APP-CLIENT

#### 2.5.7.3.0.0.0 Message

8. Clicks reset link in email and submits new password

#### 2.5.7.4.0.0.0 Sequence Number

8

#### 2.5.7.5.0.0.0 Type

üîπ User Interaction

#### 2.5.7.6.0.0.0 Is Synchronous

‚úÖ Yes

#### 2.5.7.7.0.0.0 Return Message



#### 2.5.7.8.0.0.0 Has Return

‚ùå No

#### 2.5.7.9.0.0.0 Is Activation

‚úÖ Yes

#### 2.5.7.10.0.0.0 Technical Details

##### 2.5.7.10.1.0.0 Protocol

Browser Navigation & DOM Event

##### 2.5.7.10.2.0.0 Method

onClick, onSubmit

##### 2.5.7.10.3.0.0 Parameters

###### 2.5.7.10.3.1.0 token

####### 2.5.7.10.3.1.1 Name

token

####### 2.5.7.10.3.1.2 Type

üîπ string

####### 2.5.7.10.3.1.3 Description

Extracted from URL query parameter.

###### 2.5.7.10.3.2.0 newPassword

####### 2.5.7.10.3.2.1 Name

newPassword

####### 2.5.7.10.3.2.2 Type

üîπ string

####### 2.5.7.10.3.2.3 Description

User's new password.

##### 2.5.7.10.4.0.0 Authentication

N/A

##### 2.5.7.10.5.0.0 Error Handling

Client-side validation for password complexity.

##### 2.5.7.10.6.0.0 Performance

N/A

### 2.5.8.0.0.0.0 API Call

#### 2.5.8.1.0.0.0 Source Id

REPO-APP-CLIENT

#### 2.5.8.2.0.0.0 Target Id

REPO-GW-API

#### 2.5.8.3.0.0.0 Message

9. Sends GraphQL mutation: `resetPassword`

#### 2.5.8.4.0.0.0 Sequence Number

9

#### 2.5.8.5.0.0.0 Type

üîπ API Call

#### 2.5.8.6.0.0.0 Is Synchronous

‚úÖ Yes

#### 2.5.8.7.0.0.0 Return Message

11. Returns success or error (e.g., token expired)

#### 2.5.8.8.0.0.0 Has Return

‚úÖ Yes

#### 2.5.8.9.0.0.0 Is Activation

‚úÖ Yes

#### 2.5.8.10.0.0.0 Technical Details

##### 2.5.8.10.1.0.0 Protocol

HTTPS

##### 2.5.8.10.2.0.0 Method

POST /graphql

##### 2.5.8.10.3.0.0 Parameters

- {'name': 'mutation', 'type': 'string', 'description': 'GraphQL payload: `mutation { resetPassword(token: "...", newPassword: "...") }`'}

##### 2.5.8.10.4.0.0 Authentication

N/A

##### 2.5.8.10.5.0.0 Error Handling

Handles specific errors like 'TokenInvalidOrExpired' to show user-friendly messages.

##### 2.5.8.10.6.0.0 Performance

p99 < 500ms

### 2.5.9.0.0.0.0 RPC Call

#### 2.5.9.1.0.0.0 Source Id

REPO-GW-API

#### 2.5.9.2.0.0.0 Target Id

REPO-SVC-IDENTITY

#### 2.5.9.3.0.0.0 Message

10. Forwards request via gRPC call: `resetPassword`

#### 2.5.9.4.0.0.0 Sequence Number

10

#### 2.5.9.5.0.0.0 Type

üîπ RPC Call

#### 2.5.9.6.0.0.0 Is Synchronous

‚úÖ Yes

#### 2.5.9.7.0.0.0 Return Message

10.4. Returns success/failure status

#### 2.5.9.8.0.0.0 Has Return

‚úÖ Yes

#### 2.5.9.9.0.0.0 Is Activation

‚úÖ Yes

#### 2.5.9.10.0.0.0 Technical Details

##### 2.5.9.10.1.0.0 Protocol

gRPC

##### 2.5.9.10.2.0.0 Method

IdentityService.resetPassword

##### 2.5.9.10.3.0.0 Parameters

###### 2.5.9.10.3.1.0 token

####### 2.5.9.10.3.1.1 Name

token

####### 2.5.9.10.3.1.2 Type

üîπ string

###### 2.5.9.10.3.2.0 newPassword

####### 2.5.9.10.3.2.1 Name

newPassword

####### 2.5.9.10.3.2.2 Type

üîπ string

##### 2.5.9.10.4.0.0 Authentication

Internal mTLS

##### 2.5.9.10.5.0.0 Error Handling

Returns specific error codes for invalid token, expired token, etc.

##### 2.5.9.10.6.0.0 Performance

p99 < 300ms

#### 2.5.9.11.0.0.0 Nested Interactions

##### 2.5.9.11.1.0.0 Internal Logic

###### 2.5.9.11.1.1.0 Source Id

REPO-SVC-IDENTITY

###### 2.5.9.11.1.2.0 Target Id

REPO-SVC-IDENTITY

###### 2.5.9.11.1.3.0 Message

10.1. Validates token (exists, not expired, not used).

###### 2.5.9.11.1.4.0 Sequence Number

10.1

###### 2.5.9.11.1.5.0 Type

üîπ Internal Logic

###### 2.5.9.11.1.6.0 Is Synchronous

‚úÖ Yes

###### 2.5.9.11.1.7.0 Return Message



###### 2.5.9.11.1.8.0 Has Return

‚ùå No

###### 2.5.9.11.1.9.0 Technical Details

| Property | Value |
|----------|-------|
| Protocol | Database Query |
| Method | SELECT * FROM PasswordResetTokens WHERE tokenHash ... |
| Error Handling | If query fails or returns no rows, throws TokenInv... |

##### 2.5.9.11.2.0.0 Internal Logic

###### 2.5.9.11.2.1.0 Source Id

REPO-SVC-IDENTITY

###### 2.5.9.11.2.2.0 Target Id

REPO-SVC-IDENTITY

###### 2.5.9.11.2.3.0 Message

10.2. Hashes new password (bcrypt).

###### 2.5.9.11.2.4.0 Sequence Number

10.2

###### 2.5.9.11.2.5.0 Type

üîπ Internal Logic

###### 2.5.9.11.2.6.0 Is Synchronous

‚úÖ Yes

###### 2.5.9.11.2.7.0 Return Message



###### 2.5.9.11.2.8.0 Has Return

‚ùå No

###### 2.5.9.11.2.9.0 Technical Details

| Property | Value |
|----------|-------|
| Protocol | Internal Library |
| Method | bcrypt.hash() |
| Error Handling | N/A |

##### 2.5.9.11.3.0.0 Internal Logic

###### 2.5.9.11.3.1.0 Source Id

REPO-SVC-IDENTITY

###### 2.5.9.11.3.2.0 Target Id

REPO-SVC-IDENTITY

###### 2.5.9.11.3.3.0 Message

10.3. Updates user's password hash and invalidates token.

###### 2.5.9.11.3.4.0 Sequence Number

10.3

###### 2.5.9.11.3.5.0 Type

üîπ Internal Logic

###### 2.5.9.11.3.6.0 Is Synchronous

‚úÖ Yes

###### 2.5.9.11.3.7.0 Return Message



###### 2.5.9.11.3.8.0 Has Return

‚ùå No

###### 2.5.9.11.3.9.0 Technical Details

| Property | Value |
|----------|-------|
| Protocol | Database Transaction |
| Method | BEGIN; UPDATE User; DELETE FROM PasswordResetToken... |
| Error Handling | Transaction ensures atomicity. Rollback on any fai... |

### 2.5.10.0.0.0.0 UI Update

#### 2.5.10.1.0.0.0 Source Id

REPO-APP-CLIENT

#### 2.5.10.2.0.0.0 Target Id

User

#### 2.5.10.3.0.0.0 Message

12. Displays 'Password Reset Successful' message

#### 2.5.10.4.0.0.0 Sequence Number

12

#### 2.5.10.5.0.0.0 Type

üîπ UI Update

#### 2.5.10.6.0.0.0 Is Synchronous

‚úÖ Yes

#### 2.5.10.7.0.0.0 Return Message



#### 2.5.10.8.0.0.0 Has Return

‚ùå No

#### 2.5.10.9.0.0.0 Is Activation

‚ùå No

## 2.6.0.0.0.0.0 Notes

### 2.6.1.0.0.0.0 Content

#### 2.6.1.1.0.0.0 Content

Security: To prevent email enumeration, the `requestPasswordReset` endpoint (Step 4) ALWAYS returns a generic success message, regardless of whether the email exists in the system. The email is only sent if the account is found.

#### 2.6.1.2.0.0.0 Position

top

#### 2.6.1.3.0.0.0 Participant Id

*Not specified*

#### 2.6.1.4.0.0.0 Sequence Number

4

### 2.6.2.0.0.0.0 Content

#### 2.6.2.1.0.0.0 Content

Asynchronous Flow: Email sending (Steps 6-7) is handled asynchronously via a message bus. This ensures the user receives a fast API response (Step 4) without waiting for the email to be sent.

#### 2.6.2.2.0.0.0 Position

right

#### 2.6.2.3.0.0.0 Participant Id

MessageBus

#### 2.6.2.4.0.0.0 Sequence Number

6

### 2.6.3.0.0.0.0 Content

#### 2.6.3.1.0.0.0 Content

Idempotency: The notifications service handler must be idempotent. If it receives the same `PasswordResetRequested` event twice, it should not send a second email.

#### 2.6.3.2.0.0.0 Position

bottom

#### 2.6.3.3.0.0.0 Participant Id

REPO-SVC-NOTIFICATIONS

#### 2.6.3.4.0.0.0 Sequence Number

6

## 2.7.0.0.0.0.0 Implementation Guidance

| Property | Value |
|----------|-------|
| Security Requirements | Reset tokens must be generated using a cryptograph... |
| Performance Targets | Initial password reset request API call (Steps 2-4... |
| Error Handling Strategy | For the request flow, never confirm or deny the ex... |
| Testing Considerations | End-to-end tests must cover: successful reset, res... |
| Monitoring Requirements | Monitor the rate of password reset requests. Alert... |
| Deployment Considerations | Email templates should be managed as versioned art... |

