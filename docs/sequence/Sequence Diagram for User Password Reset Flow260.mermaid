sequenceDiagram
    actor "User" as User
    actor "Web Client (SPA)" as WebClientSPA
    participant "API Gateway" as APIGateway
    participant "Identity Service" as IdentityService
    participant "Message Bus" as MessageBus
    participant "Notifications Service" as NotificationsService
    participant "AWS SES" as AWSSES

    activate WebClientSPA
    User->>WebClientSPA: 1. 1. Submits 'Forgot Password' form with email
    activate APIGateway
    WebClientSPA->>APIGateway: 2. 2. Sends GraphQL mutation: requestPasswordReset
    APIGateway-->>WebClientSPA: 4. Returns generic success response
    activate IdentityService
    APIGateway->>IdentityService: 3. 3. Forwards request via gRPC call: requestPasswordReset
    IdentityService-->>APIGateway: 3.5. Returns success status
    IdentityService->>IdentityService: 3.1. 3.1. Finds user by email. If not found, exits gracefully.
    IdentityService->>IdentityService: 3.2. 3.2. Generates secure, time-limited (15 min) reset token.
    IdentityService->>IdentityService: 3.3. 3.3. Hashes token (SHA-256) and stores hash with expiry.
    IdentityService->>MessageBus: 3.4. 3.4. Publishes PasswordResetRequested event
    WebClientSPA->>User: 5. 5. Displays generic confirmation: 'If an account exists...'
    activate NotificationsService
    MessageBus->>NotificationsService: 6. 6. Consumes PasswordResetRequested event
    activate AWSSES
    NotificationsService->>AWSSES: 7. 7. Sends password reset email via API call
    AWSSES-->>NotificationsService: 7.1. Returns send status
    User->>WebClientSPA: 8. 8. Clicks reset link in email and submits new password
    WebClientSPA->>APIGateway: 9. 9. Sends GraphQL mutation: resetPassword
    APIGateway-->>WebClientSPA: 11. Returns success or error (e.g., token expired)
    APIGateway->>IdentityService: 10. 10. Forwards request via gRPC call: resetPassword
    IdentityService-->>APIGateway: 10.4. Returns success/failure status
    IdentityService->>IdentityService: 10.1. 10.1. Validates token (exists, not expired, not used).
    IdentityService->>IdentityService: 10.2. 10.2. Hashes new password (bcrypt).
    IdentityService->>IdentityService: 10.3. 10.3. Updates user's password hash and invalidates token.
    WebClientSPA->>User: 12. 12. Displays 'Password Reset Successful' message

    note over MessageBus: Asynchronous Flow: Email sending (Steps 6-7) is handled asynchronously via a message bus. This en...
    note over NotificationsService: Idempotency: The notifications service handler must be idempotent. If it receives the same Passwo...

    deactivate AWSSES
    deactivate NotificationsService
    deactivate IdentityService
    deactivate APIGateway
    deactivate WebClientSPA
