{
  "__inputs": [
    {
      "name": "DS_PROMETHEUS",
      "label": "Prometheus",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.0.0"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "title": "Overall API Error Rate (5xx %)",
      "type": "stat",
      "datasource": "Prometheus",
      "id": 1,
      "gridPos": { "h": 6, "w": 6, "x": 0, "y": 0 },
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{status_code=~\"5..\"}[5m])) / sum(rate(http_requests_total[5m])) * 100",
          "legendFormat": "Error Rate",
          "refId": "A"
        }
      ],
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false },
        "orientation": "auto",
        "text": { "valueSize": 40 },
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "orange", "value": 1 },
              { "color": "red", "value": 5 }
            ]
          },
          "unit": "percent",
          "decimals": 2
        }
      }
    },
    {
      "title": "Overall API P95 Latency",
      "type": "stat",
      "datasource": "Prometheus",
      "id": 2,
      "gridPos": { "h": 6, "w": 6, "x": 6, "y": 0 },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))",
          "legendFormat": "P95 Latency",
          "refId": "A"
        }
      ],
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false },
        "orientation": "auto",
        "text": { "valueSize": 40 },
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "orange", "value": 0.2 },
              { "color": "red", "value": 0.5 }
            ]
          },
          "unit": "s",
          "decimals": 3
        }
      }
    },
    {
      "title": "Overall Request Throughput (RPS)",
      "type": "stat",
      "datasource": "Prometheus",
      "id": 3,
      "gridPos": { "h": 6, "w": 6, "x": 12, "y": 0 },
      "targets": [
        {
          "expr": "sum(rate(http_requests_total[5m]))",
          "legendFormat": "Total RPS",
          "refId": "A"
        }
      ],
      "options": {
        "reduceOptions": { "calcs": ["lastNotNull"], "fields": "", "values": false },
        "orientation": "auto",
        "text": { "valueSize": 40 },
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto"
      },
      "fieldConfig": { "defaults": { "unit": "reqps", "decimals": 2 } }
    },
    {
      "title": "Service Health Summary",
      "type": "table",
      "datasource": "Prometheus",
      "id": 4,
      "gridPos": { "h": 12, "w": 24, "x": 0, "y": 6 },
      "targets": [
        {
          "expr": "sum by(service) (rate(http_requests_total[5m]))",
          "refId": "A",
          "legendFormat": "RPS"
        },
        {
          "expr": "sum(rate(http_requests_total{status_code=~\"5..\"}[5m])) by (service) / sum(rate(http_requests_total[5m])) by (service) * 100",
          "refId": "B",
          "legendFormat": "Error Rate (%)"
        },
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service))",
          "refId": "C",
          "legendFormat": "P95 Latency (s)"
        }
      ],
      "transformations": [
        { "id": "merge", "options": {} },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "Value #A": "RPS",
              "Value #B": "Error Rate (%)",
              "Value #C": "P95 Latency (s)"
            }
          }
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": { "align": "auto", "displayMode": "auto" },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [{ "color": "green", "value": null }]
          }
        },
        "overrides": [
          {
            "matcher": { "id": "byName", "options": "Error Rate (%)" },
            "properties": [
              { "id": "unit", "value": "percent" },
              { "id": "decimals", "value": 2 },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    { "color": "green", "value": null },
                    { "color": "orange", "value": 1 },
                    { "color": "red", "value": 5 }
                  ]
                }
              }
            ]
          },
          {
            "matcher": { "id": "byName", "options": "P95 Latency (s)" },
            "properties": [
              { "id": "unit", "value": "s" },
              { "id": "decimals", "value": 3 },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    { "color": "green", "value": null },
                    { "color": "orange", "value": 0.2 },
                    { "color": "red", "value": 0.5 }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "title": "CPU Usage by Service",
      "type": "timeseries",
      "datasource": "Prometheus",
      "id": 5,
      "gridPos": { "h": 9, "w": 12, "x": 0, "y": 18 },
      "targets": [
        {
          "expr": "sum(rate(container_cpu_usage_seconds_total{container!=\"\", service=~\"$service\"}[5m])) by (service)",
          "legendFormat": "{{service}}",
          "refId": "A"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "cores", "decimals": 3 } }
    },
    {
      "title": "Memory Usage by Service",
      "type": "timeseries",
      "datasource": "Prometheus",
      "id": 6,
      "gridPos": { "h": 9, "w": 12, "x": 12, "y": 18 },
      "targets": [
        {
          "expr": "sum(container_memory_working_set_bytes{container!=\"\", service=~\"$service\"}) by (service)",
          "legendFormat": "{{service}}",
          "refId": "A"
        }
      ],
      "fieldConfig": { "defaults": { "unit": "bytes", "decimals": 2 } }
    }
  ],
  "refresh": "15s",
  "schemaVersion": 30,
  "style": "dark",
  "tags": ["platform", "health", "overview"],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": "Prometheus",
        "definition": "label_values(up{job='kubernetes-pods'}, service)",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "service",
        "options": [],
        "query": {
          "query": "label_values(up{job='kubernetes-pods'}, service)",
          "refId": "Prometheus-service-Variable"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": { "from": "now-1h", "to": "now" },
  "timepicker": {},
  "timezone": "browser",
  "title": "Service Health Overview",
  "uid": "service-health-overview",
  "version": 1
}