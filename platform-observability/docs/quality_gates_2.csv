"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"PR Validation Gate (CI)","Static Analysis","Pull Request Opened/Updated","All steps in `ci.yml` must pass: Linting, `promtool check`, `amtool check`, and secret scanning.","Block merge to main branch; GitHub check status set to 'Failed'.","Development Team","Fully Automated","GitHub Actions, Prettier, promtool, amtool, trufflehog","Every commit on a PR","PR author is responsible for fixing the failure.","90","0.5","Critical - Prevents broken configurations and exposed secrets from entering the main branch."
"Staging Deployment Gate (CD)","Deployment","Merge to `main` branch","The `cd.yml` workflow successfully applies all configuration changes to the staging EKS cluster.","Pipeline fails, notifies SRE team via Slack/Email, blocks further deployments until fixed.","SRE/Operations Team","Fully Automated","GitHub Actions, kubectl","Every merge to `main`","On-call SRE investigates pipeline failure.","98","4","Ensures that every change in the source of truth is reflected in a production-like environment."
"Peer Review Gate","Manual Review","Pull Request Opened","At least one qualified peer has reviewed and approved the changes, with a specific focus on PromQL performance and alert logic.","Block merge to main branch.","Development Team","Manual","GitHub Pull Requests","Every PR","Team lead resolves review conflicts.","100","8","High - Catches logical errors, performance issues, and suboptimal alert design that automated tools cannot."