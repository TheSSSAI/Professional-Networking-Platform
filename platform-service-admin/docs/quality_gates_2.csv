"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request Quality Gate","Static Analysis & Unit Test","Pull Request to `main`","Code coverage >= 80% (REQ-1-064); All unit & integration tests pass; ESLint & Prettier checks pass; No new High/Critical vulnerabilities from SAST/SCA scans (REQ-1-078).","Block merge; Fail GitHub Actions check.","Development Team","Fully Automated","Jest; ESLint; Snyk; CodeQL; GitHub Actions","Every commit on a PR","PR author is notified automatically.","90","1.5","Prevents low-quality or vulnerable code from entering the main branch."
"Staging Deployment Quality Gate","E2E & Security","Merge to `main`","Docker image vulnerability scan finds 0 critical issues; Deployment to EKS succeeds; Post-deployment E2E smoke test suite passes.","Rollback deployment; Create P1 bug; Alert on-call team.","DevOps & QA Team","Fully Automated","GitHub Actions; AWS ECR Scan; Supertest/Jest (for smoke tests)","Every merge to `main`","Automatic alert to DevOps Slack channel.","95","4","Prevents broken or vulnerable builds from reaching the staging environment, which is the final gate before production."